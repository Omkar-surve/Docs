AT INGRESS PE ROUTER:
========================
Ingress PE marks each CE packets independently and does not modify original DSCP marking.

STEP 1: INGRESS PE CLASSIFIES THE INCOMING IPP/DSCP PACKETS

class-map match-any NOC_MGMT
 match dscp cs2 
class-map match-any REALTIME
 match dscp cs4  ef 
class-map match-any NOC_CRITICAL
 match dscp 25 
class-map match-any BEST_EFFORT
 match dscp default 
class-map match-any BULK_DATA
 match dscp af11  af21 
!

STEP 2: INGRESS PE DOES DSCP/IPP===> MPLS EXP BITS AS PER IT'S OWN POLICIES

policy-map PIPE_DSCP_EXP_INGRESS
 class REALTIME
  set mpls experimental imposition 5
  police cir 250000000 conform-action transmit  exceed-action set-mpls-exp-imposition-transmit 0 violate-action drop 
 class NOC_MGMT
  set mpls experimental imposition 4
  police cir 150000000 conform-action transmit  exceed-action transmit  violate-action set-mpls-exp-imposition-transmit 1
 class NOC_CRITICAL
  set mpls experimental imposition 3
  police cir 150000000 conform-action transmit  exceed-action transmit  violate-action transmit 
 class BULK_DATA
  set mpls experimental imposition 2
  police cir 300000000 bc 150000 conform-action transmit  exceed-action set-mpls-exp-imposition-transmit 0 violate-action drop 
 class BEST_EFFORT
  set mpls experimental imposition 1
  police cir 100000000 conform-action transmit  exceed-action set-mpls-exp-imposition-transmit 0 violate-action drop 
 class class-default
  set mpls experimental imposition 0
  police cir 50000000 conform-action transmit  exceed-action drop  violate-action drop 
!

AT EGRESS PE ROUTER:
==========================
Traffic exiting out of MPLS VPN cloud is queued and shaped based on ISP PE's markings (Marking done by ISP itself can be Ingress PE or core router markings)
Requirement of MPLS EXP --> QoS Group and QoS Group --> IP Precedence mapping at egress PE to preserve ISP markings at egress PE also to avoid change in original CE's IPP/DSCP markings to the packet

STEP 3: EGRESS PE DOES MPLS EXP BITS CLASSIFICATION OF TRAFFIC RECEIVED FROM IT'S LOCAL NEIGHBORS(ITS OWN ISP)

class-map match-all EXP_2
 match mpls experimental topmost 2 
class-map match-all EXP_3
 match mpls experimental topmost 3 
class-map match-all EXP_0
 match mpls experimental topmost 0 
class-map match-all EXP_1
 match mpls experimental topmost 1 
class-map match-all EXP_4
 match mpls experimental topmost 4 
class-map match-all EXP_5
 match mpls experimental topmost 5 
!

STEP 4: EGRESS PE DOES MPLS EXP===>QOS-GROUP/DISCARD-CLASS MAPPING

policy-map EXP_to_QOS_GRP_and_DISCARD_CLASS
 class EXP_5
  set qos-group 5
 class EXP_0
  set qos-group 0
  set discard-class 1
 class EXP_4
  set discard-class 4
  set qos-group 4
 class EXP_3
  set qos-group 3
  set discard-class 3
 class EXP_2
  set qos-group 2
  set discard-class 2
 class EXP_1
  set qos-group 1
  set discard-class 1
 class class-default
  set qos-group 0
  set discard-class 0
!

STEP 5: EGRESS PE THEN CLASSIFIES LOCAL QOS-GROUP/DISCARD-CLASS MAPPED PACKETS

class-map match-all QOS_GROUP_DISCARD_CLASS_5
 match qos-group 5
class-map match-all QOS_GROUP_DISCARD_CLASS_2
 match qos-group 2
 match discard-class 2
class-map match-all QOS_GROUP_DISCARD_CLASS_3
 match qos-group 3
 match discard-class 3
class-map match-all QOS_GROUP_DISCARD_CLASS_0
 match qos-group 0
 match discard-class 0
class-map match-all QOS_GROUP_DISCARD_CLASS_1
 match qos-group 1
 match discard-class 1
class-map match-all QOS_GROUP_DISCARD_CLASS_4
 match qos-group 4
 match discard-class 4
!

STEP 6: EGRESS PE THEN PERFORMS QUEUING FOR THE OUT-TRAFFIC BASED ON IT'S LOCAL QOS-GROUP/DISCARD-CLASS MAPPING

policy-map TRAFFIC_QUEUE_TOWARDS_BOB
 description queuing CE traffic towards BOB using ISP EXP markings
 class QOS_GROUP_DISCARD_CLASS_5
  queue-limit 600
  priority level 1 percent 25
 class QOS_GROUP_DISCARD_CLASS_4
  bandwidth percent 15
  queue-limit 500
  random-detect discard-class-based
  random-detect discard-class 4 300 400 20
 class QOS_GROUP_DISCARD_CLASS_3
  bandwidth percent 15 
  queue-limit 500
  random-detect discard-class-based
  random-detect discard-class 3 300 450 10
 class QOS_GROUP_DISCARD_CLASS_2
  bandwidth percent 30 
  queue-limit 450
  random-detect discard-class-based
  random-detect discard-class 2 150 450 9
 class QOS_GROUP_DISCARD_CLASS_1
  bandwidth percent 10
  queue-limit 450
  random-detect discard-class-based
  random-detect discard-class 1 250 400 10
 class QOS_GROUP_DISCARD_CLASS_0
  bandwidth percent 5 
  queue-limit 450
  random-detect discard-class-based
  random-detect discard-class 0 50 100 9
 !
!

STEP 7: EGRESS PE THEN SHAPES THE OUT-TRAFFIC AS PER OUT-INTERFACE BANDWIDTH

policy-map TRAFFIC_SHAPE_TOWARDS_BOB
 class class-default
  shape peak 495000000   
   service-policy TRAFFIC_QUEUE_TOWARDS_BOB
!

STEP 8: APPLYING PARENT POLICY ON OUT-INTERFACE

interface GigabitEthernet3.3
 service-policy output TRAFFIC_SHAPE_TOWARDS_BOB
!
